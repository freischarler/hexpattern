#image
FROM golang:1.17 as builder

# Set Environment Variables
#ENV HOME /app
#ENV CGO_ENABLED 0
#ENV GOOS linux

#run terminal command
#RUN mkdir /app

#add .(all current directory) to /app
#ADD .  /app

#set workdir to app
WORKDIR /app

# Copy and download dependency using go mod
COPY go.mod go.sum ./
RUN go mod download



# Copy everything from the current directory to the PWD (Present Working Directory) inside the container
COPY . .

# Build the Go app
RUN go build -o /hex 

FROM alpine:latest

WORKDIR /app

# Copy the pre-built binary file from the previous stage
COPY --from=builder /app .

# This container exposes port 8080 to the outside world
EXPOSE 8080

# Run the binary program produced by `go install`
#CMD ["./hex"]
ENTRYPOINT ["/hex"]




#
#RUN make build
#EXPOSE 8080
#CMD ["./main"]


#to build Dockerfile (. is the directory where Dockerfile is)
## docker build -t test .             